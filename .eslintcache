[{"C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\index.js":"1","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Apps\\AuthentificationApp.js":"2","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Apps\\ProductsApp.js":"3","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\data\\products.js":"4","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\navbars\\MainNavBar.js":"5","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\Forms\\AccountDetails.js":"6","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Apps\\CheckoutApp.js":"7","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\Forms\\SignUpForm.js":"8","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\Forms\\LogInForm.js":"9","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\data\\cartItems.js":"10","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\data\\user.js":"11","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\AccountInfo.js":"12","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\product\\ProductList.js":"13","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\product\\ProductRow.js":"14","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\product\\Product.js":"15","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\product\\ProductPage.js":"16","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\ReviewsMenu.js":"17","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\cart\\CartItem.js":"18"},{"size":537,"mtime":1610052131358,"results":"19","hashOfConfig":"20"},{"size":1360,"mtime":1607972163653,"results":"21","hashOfConfig":"20"},{"size":2019,"mtime":1610052162266,"results":"22","hashOfConfig":"20"},{"size":5906,"mtime":1608161436494,"results":"23","hashOfConfig":"20"},{"size":4125,"mtime":1610052100792,"results":"24","hashOfConfig":"20"},{"size":6325,"mtime":1608138014302,"results":"25","hashOfConfig":"20"},{"size":3018,"mtime":1609687674704,"results":"26","hashOfConfig":"20"},{"size":3518,"mtime":1608226993677,"results":"27","hashOfConfig":"20"},{"size":3453,"mtime":1608046571512,"results":"28","hashOfConfig":"20"},{"size":577,"mtime":1608213545258,"results":"29","hashOfConfig":"20"},{"size":1762,"mtime":1608204066552,"results":"30","hashOfConfig":"20"},{"size":1108,"mtime":1608052516704,"results":"31","hashOfConfig":"20"},{"size":437,"mtime":1608162868513,"results":"32","hashOfConfig":"20"},{"size":403,"mtime":1608161101363,"results":"33","hashOfConfig":"20"},{"size":2221,"mtime":1608204733784,"results":"34","hashOfConfig":"20"},{"size":6747,"mtime":1608211797021,"results":"35","hashOfConfig":"20"},{"size":815,"mtime":1608202151810,"results":"36","hashOfConfig":"20"},{"size":1403,"mtime":1608495618793,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ygj3il",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},"C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\index.js",["84","85","86","87","88"],"C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Apps\\AuthentificationApp.js",[],["89","90"],"C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Apps\\ProductsApp.js",["91","92"],"C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\data\\products.js",["93"],"import $ from 'jquery'\r\nasync function getProducts(){\r\n  const ans = await Promise.resolve($.post('http://localhost:8000/ReactApi/getProducts.php',{}))\r\n  console.log(ans)\r\n  const postResponse=JSON.parse(ans);\r\n  \r\n  const productsRaw=JSON.parse(postResponse.products);\r\n  \r\n  //aici\r\n  // const productsRaw={\r\n    \r\n  //   Laptop:\r\n  //   [\r\n  //     {\r\n  //     id:1,\r\n  //     img:\"https://lcdn.altex.ro/resize/media/catalog/product/I/d/16fa6a9aef7ffd6209d5fd9338ffa0b1/IdeaPad_S145-9.jpg\",\r\n  //     name:\"Laptop lenovo legion 504\",\r\n  //     brand:\"Lenovo\",\r\n  //     price:250,\r\n  //     descr:\"4GB RAM, 512 GB SSD, Radeon R7 320\"\r\n  //   }],\r\n  //   Smartphone:\r\n  //   [\r\n  //     {\r\n  //       id:2,\r\n  //       img:\"https://lcdn.altex.ro/resize/media/catalog/product/S/M/16fa6a9aef7ffd6209d5fd9338ffa0b1/SMTA20SBK_2.jpg\",\r\n  //       descr:\"2GB RAM, 64 GB Storage\",\r\n  //       name:\"Samsung Galaxy S8\",\r\n  //       brand:\"Samsung\",\r\n  //       price:100\r\n  //     },\r\n  //     {\r\n  //       id:3,\r\n  //       img:\"https://lcdn.altex.ro/resize/media/catalog/product/S/M/16fa6a9aef7ffd6209d5fd9338ffa0b1/SMTA20SBK_2.jpg\",\r\n  //       descr:\"2GB RAM, 64 GB Storage\",\r\n  //       name:\"Samsung Galaxy S8\",\r\n  //       brand:\"Samsung\",\r\n  //       price:100\r\n  //     },\r\n  //     {\r\n  //       id:4,\r\n  //       img:\"https://lcdn.altex.ro/resize/media/catalog/product/S/M/16fa6a9aef7ffd6209d5fd9338ffa0b1/SMTA20SBK_2.jpg\",\r\n  //       descr:\"2GB RAM, 64 GB Storage\",\r\n  //       name:\"Samsung Galaxy S8\",\r\n  //       brand:\"Samsung\",\r\n  //       price:100\r\n  //     },\r\n  //     {\r\n  //       id:7,\r\n  //       img:\"https://lcdn.altex.ro/resize/media/catalog/product/S/M/16fa6a9aef7ffd6209d5fd9338ffa0b1/SMTA20SBK_2.jpg\",\r\n  //       descr:\"2GB RAM, 64 GB Storage\",\r\n  //       name:\"Samsung Galaxy S8\",\r\n  //       brand:\"Samsung\",\r\n  //       price:100\r\n  //     },\r\n  //     {\r\n  //       id:100,\r\n  //       img:\"https://lcdn.altex.ro/resize/media/catalog/product/S/M/16fa6a9aef7ffd6209d5fd9338ffa0b1/SMTA20SBK_2.jpg\",\r\n  //       descr:\"2GB RAM, 64 GB Storage\",\r\n  //       name:\"Samsung Galaxy S8\",\r\n  //       brand:\"Samsung\",\r\n  //       price:100\r\n  //     },\r\n  //     {\r\n  //       id:200,\r\n  //       img:\"https://lcdn.altex.ro/resize/media/catalog/product/S/M/16fa6a9aef7ffd6209d5fd9338ffa0b1/SMTA20SBK_2.jpg\",\r\n  //       descr:\"2GB RAM, 64 GB Storage\",\r\n  //       name:\"Samsung Galaxy S8\",\r\n  //       brand:\"Samsung\",\r\n  //       price:100\r\n  //     },\r\n  //     {\r\n  //       id:300,\r\n  //       img:\"https://lcdn.altex.ro/resize/media/catalog/product/S/M/16fa6a9aef7ffd6209d5fd9338ffa0b1/SMTA20SBK_2.jpg\",\r\n  //       descr:\"2GB RAM, 64 GB Storage\",\r\n  //       name:\"Samsung Galaxy S8\",\r\n  //       brand:\"Samsung\",\r\n  //       price:100\r\n  //     },{\r\n  //       id:400,\r\n  //       img:\"https://lcdn.altex.ro/resize/media/catalog/product/S/M/16fa6a9aef7ffd6209d5fd9338ffa0b1/SMTA20SBK_2.jpg\",\r\n  //       descr:\"2GB RAM, 64 GB Storage\",\r\n  //       name:\"Samsung Galaxy S8\",\r\n  //       brand:\"Samsung\",\r\n  //       price:100\r\n  //     },\r\n  //     {\r\n  //       id:500,\r\n  //       img:\"https://lcdn.altex.ro/resize/media/catalog/product/S/M/16fa6a9aef7ffd6209d5fd9338ffa0b1/SMTA20SBK_2.jpg\",\r\n  //       descr:\"2GB RAM, 64 GB Storage\",\r\n  //       name:\"Samsung Galaxy S8\",\r\n  //       brand:\"Samsung\",\r\n  //       price:100\r\n  //     },{\r\n  //       id:600,\r\n  //       img:\"https://lcdn.altex.ro/resize/media/catalog/product/S/M/16fa6a9aef7ffd6209d5fd9338ffa0b1/SMTA20SBK_2.jpg\",\r\n  //       descr:\"2GB RAM, 64 GB Storage\",\r\n  //       name:\"Samsung Galaxy S8\",\r\n  //       brand:\"Samsung\",\r\n  //       price:100\r\n  //     },{\r\n  //       id:700,\r\n  //       img:\"https://lcdn.altex.ro/resize/media/catalog/product/S/M/16fa6a9aef7ffd6209d5fd9338ffa0b1/SMTA20SBK_2.jpg\",\r\n  //       descr:\"2GB RAM, 64 GB Storage\",\r\n  //       name:\"Samsung Galaxy S8\",\r\n  //       brand:\"Samsung\",\r\n  //       price:100\r\n  //   }],\r\n  //   Tv:\r\n  //   [\r\n  //     {\r\n  //       id:12,\r\n  //       img:\"https://lcdn.altex.ro/resize/media/catalog/product/2/e/16fa6a9aef7ffd6209d5fd9338ffa0b1/2e29d0ff1c72a537798ce1cafe6a7579_154230_2.jpg\",\r\n  //       descr:\"4k 1920px diagonal\",\r\n  //       name:\"Samsung LED Ultra H-5403\",\r\n  //       brand:\"Samsung\",\r\n  //       price:500\r\n  //     }\r\n  //   ],\r\n  //   Samsung:\r\n  //   [\r\n  //     {\r\n  //       id:12,\r\n  //       img:\"https://lcdn.altex.ro/resize/media/catalog/product/2/e/16fa6a9aef7ffd6209d5fd9338ffa0b1/2e29d0ff1c72a537798ce1cafe6a7579_154230_2.jpg\",\r\n  //       descr:\"4k 1920px diagonal\",\r\n  //       name:\"Samsung LED Ultra H-5403\",\r\n  //       brand:\"Samsung\",\r\n  //       price:500\r\n  //     }\r\n  //   ],\r\n  //   Stonk:\r\n  //   [\r\n  //     {\r\n  //       id:12,\r\n  //       img:\"https://s13emagst.akamaized.net/products/4426/4425063/images/res_a80e8a6f3e26afc1e636bfb5bcac3e88.jpg?width=450&height=450&hash=F25ABFF754051164E4EE54DF8B19BE04\",\r\n  //       descr:\"4k 1920px diagonal\",\r\n  //       name:\"Samsung LED Ultra H-5403\",\r\n  //       brand:\"Samsung\",\r\n  //       price:500\r\n  \r\n  //     } \r\n  //   ]\r\n  // }\r\n  \r\n  const productNames=[];\r\n  \r\n  const products=[],size=4;\r\n  for (var key in productsRaw){\r\n    products[key]=[];\r\n    if (productsRaw[key].length>0)\r\n    productNames.push(key);\r\n  }\r\n  \r\n  console.log(productsRaw);\r\n  console.log(\"MAI SUS\")\r\n  for (var key in productsRaw){\r\n    if (productsRaw[key].length>0){\r\n      while (productsRaw[key].length>0){\r\n        products[key].push(productsRaw[key].splice(0,size));\r\n      }\r\n    }\r\n  }\r\n  console.log(products,productNames)\r\n  return [products,productNames]\r\n}\r\nasync function getProductDetails(product_id){\r\n  const ans = await Promise.resolve($.post('http://localhost:8000/ReactApi/getProductDetails.php',{product_id:product_id}))\r\n  console.log(ans)\r\n  const postResponse = JSON.parse(ans)\r\n  return postResponse\r\n}\r\nexport {getProducts,getProductDetails}","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\navbars\\MainNavBar.js",["94","95","96","97","98","99","100"],"C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\Forms\\AccountDetails.js",["101","102","103","104","105","106","107","108","109"],"import React, { useState } from 'react';\r\nimport {Spring} from 'react-spring/renderprops';\r\nimport $, { post } from 'jquery'\r\n\r\nconst AccountDetails= ({data}) =>{\r\n  // DACA data=[] e ok , DACA NU ATUNCI PUNEM IN VALUE VALORILE primite in data si facem un POST cu UPDATE\r\n  \r\n  console.log(sessionStorage.getItem('session_id'));\r\n  const [detailsResponse,setDetailsResponse]=useState('');\r\n  const [firstName,setFirstName] = useState(data[1]);\r\n  const [lastName,setLastName] = useState(data[2]);\r\n  const [phoneNumber,setPhoneNumber] = useState(data[3]);\r\n  const [country,setCountry] = useState(data[4]);\r\n  const [city,setCity] = useState(data[5]);\r\n  const [street,setStreet] = useState(data[6]);\r\n  const [postalCode,setPostalCode]= useState(data[7]);\r\n\r\n  const onChangeFirstName = (e) =>{\r\n    setFirstName(e.target.value)\r\n  }\r\n  const onChangeLastName = (e) =>{\r\n    setLastName(e.target.value)\r\n  }\r\n  const onChangePhoneNumber = (e) =>{\r\n    setPhoneNumber(e.target.value)\r\n  }\r\n  const onChangeCountry = (e) =>{\r\n    setCountry(e.target.value)\r\n  }\r\n  const onChangeCity = (e) =>{\r\n    setCity(e.target.value)\r\n  }\r\n  const onChangeStreet = (e) =>{\r\n    setStreet(e.target.value)\r\n  }\r\n  const onChangePostalCode = (e) =>{\r\n    setPostalCode(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    if (validInput()){\r\n      if (data[0]==''){//need to insert values\r\n        //post catre php si se face in account details linie\r\n        const ans = await Promise.resolve($.post('http://localhost:8000/ReactApi/fillUserDetails.php?', { session_id:sessionStorage.getItem(\"session_id\"),\r\n                                                                                    username:sessionStorage.getItem(\"username\"),firstName:firstName,lastName:lastName,\r\n                                                                                    country:country,phoneNumber:phoneNumber,\r\n                                                                                    city:city, street:street,postalCode:postalCode }))\r\n        console.log(ans)\r\n          const postResponse = JSON.parse(ans)\r\n          if (postResponse.status!==0){\r\n            window.location.reload()\r\n          }\r\n          else{\r\n            console.log(\"AA\")\r\n            setDetailsResponse(postResponse.userDetailsProblem)\r\n          }\r\n        // fa un mesaj deconfirmare\r\n      }\r\n      else{\r\n        if (!sameValues(data)){\r\n          // FA AICI SA FIE UPDATE NU INSERT, FA MESAJ LA LOGIN/SIGN IN PROBLEM. SI APOI BD CU PRODUSE.\r\n          const ans = await Promise.resolve($.post('http://localhost:8000/ReactApi/updUserDetails.php?', { session_id:sessionStorage.getItem(\"session_id\"),\r\n                                                                                    username:sessionStorage.getItem(\"username\"),firstName:firstName,lastName:lastName,\r\n                                                                                    country:country,phoneNumber:phoneNumber,\r\n                                                                                    city:city, street:street,postalCode:postalCode }))\r\n          console.log(ans)\r\n          const postResponse = JSON.parse(ans)\r\n          if (postResponse.status!==0){\r\n            window.location.reload()\r\n          }\r\n          else{\r\n            console.log(\"AA\")\r\n            setDetailsResponse(postResponse.userDetailsProblem)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    else{\r\n      setDetailsResponse(\"Invalid input\");\r\n    }\r\n  }\r\n\r\n  const validInput= () => {\r\n    if (!firstName || !lastName || !phoneNumber || !country || !city || !street || !postalCode)\r\n      return false;\r\n    return true;\r\n  }\r\n  const sameValues= (data)=>{\r\n    return (data[0]==firstName && data[1]==lastName && data[2]==phoneNumber\r\n      && data[3]==country && data[4]==city && data[5]==street && data[6]==postalCode)\r\n  }\r\n\r\n  return (\r\n    <Spring\r\n    from = {{opacity:0,marginTop:500}}\r\n    to ={{opacity:1,marginTop:0}}\r\n    >\r\n      {props => (\r\n      <div style={props}>\r\n      <article>\r\n        <form className=\"form d-flex flex-column justify-content-center align-items-center\" onSubmit={handleSubmit}>\r\n        <h2>Personal Information</h2>\r\n          <div className='form-control row'>\r\n            <label htmlFor=\"firstName\">First Name : </label>\r\n            <input value={firstName}\r\n            onChange={onChangeFirstName}\r\n            type=\"text\" id=\"firstName\" name=\"firstName\"/>\r\n          </div>\r\n          <div className='form-control row'>\r\n            <label htmlFor=\"lastName\">Last Name : </label>\r\n            <input value={lastName}\r\n            onChange={onChangeLastName}\r\n            type=\"text\" id=\"lastName\" name=\"lastName\"/>\r\n          </div>\r\n          <div className='form-control row'>\r\n            <label htmlFor=\"phoneNumber\">Phone : </label>\r\n            <input value={phoneNumber}\r\n            onChange={onChangePhoneNumber}\r\n            type=\"text\" id=\"phoneNumber\" name=\"phoneNumber\"/>\r\n          </div>\r\n          <h2>Delivery Information:</h2>\r\n          <div className='form-control row'>\r\n            <label htmlFor=\"country\">Country : </label>\r\n            <input value={country}\r\n            onChange={onChangeCountry}\r\n            type=\"text\" id=\"country\" name=\"country\"/>\r\n          </div>\r\n          <div className='form-control row'>\r\n            <label htmlFor=\"city\">City : </label>\r\n            <input value={city}\r\n            onChange={onChangeCity}\r\n            type=\"text\" id=\"city\" name=\"city\"/>\r\n          </div>\r\n          <div className='form-control row'>\r\n            <label htmlFor=\"street\">Street(name and nr) : </label>\r\n            <input value={street}\r\n            onChange={onChangeStreet}\r\n            type=\"text\" id=\"street\" name=\"street\"/>\r\n          </div>\r\n          <div className='form-control row'>\r\n            <label htmlFor=\"postalCode\">Postal Code : </label>\r\n            <input value={postalCode}\r\n            onChange={onChangePostalCode}\r\n            type=\"text\" id=\"postalCode\" name=\"postalCode\"/>\r\n          </div>\r\n\r\n          <button className=\"btn-dark\" type=\"submit\">Save</button>\r\n          <h2 className=\"responseMessage \">{detailsResponse}</h2>\r\n        </form>\r\n      </article>\r\n      </div>\r\n      )}\r\n    </Spring>\r\n  )\r\n}\r\nexport default AccountDetails","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Apps\\CheckoutApp.js",["110"],"import React,{useState} from 'react';\r\nimport CartItem from '../Components/cart/CartItem';\r\nimport {Spring} from 'react-spring/renderprops';\r\nimport {getUserDetails} from '../data/user'\r\nimport $ from 'jquery'\r\n// BUTTON CU POST REQUEST CARE FACE UN ORDER ID SI ORDER ITEMS PT FIECARE ITEM DIN CART\r\n// Merge doar daca are account details-urile completate\r\nconst CheckoutApp = ({cartItems})=> {\r\n\r\n  const sendOrder = async () =>{\r\n    const userDetails = await getUserDetails();\r\n    if (userDetails.status===1){\r\n    \r\n      alert(\"ok\");\r\n      var cartItems_quantities=[];\r\n      for (let i=0;i<cartItems.length;i++){\r\n        cartItems_quantities.push(document.getElementById(\"quantity-\"+i).innerText)\r\n      }\r\n      try{\r\n        for (let i=0;i<cartItems.length;i++){\r\n          cartItems_quantities[i]=parseInt(cartItems_quantities[i].slice(10))\r\n        }\r\n      }\r\n      catch(err){\r\n        window.location.reload()\r\n      }\r\n      console.log(cartItems_quantities)\r\n      //FOLOSESTE ASTA\r\n      var cartItems_id_qu=[]\r\n      for (let i=0;i<cartItems.length;i++){\r\n        cartItems_id_qu.push([cartItems[i].id,cartItems_quantities[i]])\r\n      }\r\n      console.log(cartItems_id_qu)\r\n      const ans = await Promise.resolve($.post('http://localhost:8000/ReactApi/sendOrder.php', {cartItems_id_qu:cartItems_id_qu,session_id:sessionStorage.getItem(\"session_id\"),\r\n                                                                                       username: sessionStorage.getItem(\"username\"),\r\n                                                                                      }))\r\n      console.log(ans)\r\n      const postResponse=JSON.parse(ans)\r\n      document.getElementById('sendOrderBtn').innerHTML=postResponse[1];\r\n      document.getElementById('sendOrderBtn').disabled=true;\r\n      \r\n      // cod pt a insera order-ul si stergem cartul\r\n    }\r\n    else{\r\n      alert(\"NU E OK\");\r\n    }\r\n    // verifica daca avem destule piese si verifica daca in sessions avem valoare pentru first Name\r\n  }\r\n  return (\r\n    <Spring\r\n    from={{marginTop:400}}\r\n    to ={{marginTop:0}}\r\n    >{props =>(\r\n      cartItems.length!==0\r\n        ?\r\n        <div style={props} className=\"container d-flex flex-column justify-content-center col-8 col-xl-4 cl-lg-4 col-md-6 col-sm-8\">\r\n          {cartItems.map(((cartItem,index)=>{\r\n            return (\r\n              <CartItem key={index} index={index} id={cartItem.id} productType={cartItem.productType}\r\n              img={cartItem.img} name={cartItem.name} price={cartItem.price}></CartItem>\r\n            );\r\n          }))}\r\n          <div className=\"row justify-content-center\">\r\n          <button id=\"sendOrderBtn\" className=\"btn btn-dark col-4\" onClick={sendOrder}>Confirm order</button>\r\n          </div>\r\n        </div>\r\n        :\r\n        <div className=\"container d-flex flex-column justify-content-center align-items-center\">\r\n        <h3 className='responseMessage'>Empty Cart</h3>\r\n        </div>\r\n    )}</Spring>\r\n\r\n  );\r\n}\r\n\r\nexport default CheckoutApp;","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\Forms\\SignUpForm.js",["111"],"import React, { useState } from 'react';\r\nimport $, { post } from 'jquery'\r\nconst  SignUpApp = () => {\r\n  const [signupRespose,setSignupResponse]=useState('')\r\n  const [password,setPassword] = useState('');\r\n  const [email,setEmail] = useState('');\r\n  const [username,setUsername]=useState('')\r\n  const [confirmPassword,setConfirmPassword]= useState('');\r\n\r\n  const handleSubmit= async e =>{\r\n    e.preventDefault();\r\n    if (validInput()){\r\n      // fa post ca la login si insereaza in baza de date, cu tot cu un email de verifare in care ii trimiti\r\n      const ans = await Promise.resolve($.post('http://localhost:8000/ReactApi/signup.php', { username:username,email: email, password: password,passwordRepeat:confirmPassword }))\r\n      const postResponse = JSON.parse(ans)\r\n      console.log(ans)\r\n      if (postResponse.status){\r\n        //fa sa afisezi erorile la un moment dat (user already exists)\r\n        console.log(postResponse)\r\n        if (postResponse)\r\n        setSignupResponse(\"Account Created Successfully, check your email\")        \r\n        setConfirmPassword('');\r\n        setPassword('')\r\n        setEmail('')\r\n        setUsername('')\r\n      }\r\n      else{\r\n        setSignupResponse(postResponse.signupProblem)\r\n      }\r\n    }\r\n    else{\r\n      setSignupResponse(\"Bad values\")\r\n    }\r\n  };\r\n  const onChangeEmail = (e) =>{\r\n    setEmail(e.target.value);\r\n  }\r\n  const onChangePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  }\r\n  const onChangeConfirmPassword = (e)=>{\r\n    setConfirmPassword(e.target.value);\r\n  }\r\n  const onChangeUsername= (e) => {\r\n    setUsername(e.target.value)\r\n  }\r\n  const validInput = () =>{\r\n    if (!password || !email || !confirmPassword || !username){\r\n      return false;\r\n    }\r\n    if (password!==confirmPassword){\r\n      document.getElementById('password').style.color=\"red\";\r\n      return false;\r\n    }\r\n    if (password.length<7){\r\n      document.getElementById('password').style.color=\"red\";\r\n      return false;\r\n    }\r\n    if (!(email.includes(\"@\"))){\r\n      document.getElementById('email').style.color=\"red\";\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <article>\r\n      <form className=\"form d-flex flex-column justify-content-center align-items-center\" onSubmit={handleSubmit}>\r\n        <div className='form-control'>\r\n          <label htmlFor=\"email\">Email : </label>\r\n          <input value={email}\r\n          onChange={onChangeEmail}\r\n           type=\"email\" id=\"email\" name=\"email\"/>\r\n        </div>\r\n        <div className='form-control'>\r\n          <label htmlFor=\"username\">Username : </label>\r\n          <input value={username}\r\n          onChange={onChangeUsername}\r\n           type=\"text\" id=\"username\" name=\"username\"/>\r\n        </div>\r\n        <div className='form-control'>\r\n          <label htmlFor=\"password\">Password : </label>\r\n          <input value={password} \r\n          onChange={onChangePassword}\r\n           type=\"password\" id=\"password\" name=\"password\"/>\r\n        </div>\r\n        <div className='form-control'>\r\n          <label htmlFor=\"confirmPassword\">Confirm Password : </label>\r\n          <input value={confirmPassword} \r\n          onChange={onChangeConfirmPassword}\r\n           type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\"/>\r\n        </div>\r\n        <button className=\"btn-dark\" type=\"submit\" name=\"submit\">Register</button>\r\n        <h2 className=\"responseMessage\">{signupRespose}</h2>\r\n      </form>\r\n    </article>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default SignUpApp;","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\Forms\\LogInForm.js",["112","113","114","115","116"],"import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport $, { post } from 'jquery';\r\nconst  LogInApp = () => {\r\n  const [loginResponse,setLoginResponse]= useState('');\r\n  const [password,setPassword] = useState('')\r\n  const [username,setUsername] = useState('')\r\n  const handleSubmit= async e =>{\r\n    e.preventDefault();\r\n\r\n    console.log('just testing')\r\n\r\n    if (validInput()) {\r\n\r\n      const ans = await Promise.resolve($.post('http://localhost:8000/ReactApi/login.php', { username: username, password: password }))\r\n      const postResponse = JSON.parse(ans)\r\n      console.log(ans)\r\n      if (postResponse.status){\r\n        // FA SA PRIMESTI SI DETALIILE PRECUM FIRST NAME , altfel pune '' in first_name si in celelalte\r\n        console.log(postResponse)\r\n        if (postResponse.isAdmin==0){\r\n          if (postResponse.isActive){\r\n            sessionStorage.setItem(\"username\",postResponse.username)\r\n            sessionStorage.setItem('session_id',postResponse.session_id);     \r\n            window.location.href=\"index.html\"       \r\n            setPassword('')\r\n            setUsername('')\r\n          }\r\n          else{\r\n            setLoginResponse(\"Active Your Account First!\")\r\n          }\r\n        }\r\n        else{\r\n          if (postResponse.isAdmin==1)\r\n            window.location.href=\"admin.html\";\r\n          else if (postResponse.isAdmin==2)\r\n            window.location.href=\"owner.html\";\r\n        }\r\n      }\r\n      else{\r\n        setLoginResponse(\"Incorrect credentials\")\r\n      }\r\n    }\r\n    else{\r\n      setLoginResponse(\"Bad values\")\r\n    }\r\n  }\r\n  \r\n  const onChangeusername = (e)=>{\r\n    setUsername(e.target.value)\r\n  }\r\n  const onChangePassword = (e)=>{\r\n    setPassword(e.target.value)\r\n  }\r\n  const validInput = () =>{\r\n    if (!password || !username){\r\n      return false\r\n    }\r\n    if (password.length<7){\r\n      document.getElementById('password').style.color=\"red\"\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n  const resetPassword = async () =>{\r\n    if (username){\r\n      const ans = await Promise.resolve($.post('http://localhost:8000/ReactApi/resetPass.php', { username: username }))\r\n      console.log(ans)\r\n      const postResponse = JSON.parse(ans)\r\n      if(postResponse.status){\r\n        setLoginResponse(\"Email sent\")\r\n      }\r\n      else{\r\n        setLoginResponse(\"Incorrect username/email\")\r\n      }\r\n    }\r\n    else{\r\n      setLoginResponse(\"Incorrect username/email\")\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <article>\r\n      <form  className=\"form d-flex flex-column justify-content-center align-items-center\" onSubmit={handleSubmit}>\r\n        <div className='form-control row'>\r\n          <label htmlFor=\"username\">Username : </label>\r\n          <input value={username}\r\n          onChange={onChangeusername}\r\n           type=\"username\" id=\"username\" name=\"username\"/>\r\n        </div>\r\n        <div className='form-control row'>\r\n          <label htmlFor=\"password\">Password : </label>\r\n          <input value={password}\r\n          onChange={onChangePassword}\r\n           type=\"password\" id=\"password\" name=\"password\"/>\r\n        </div>\r\n        <button className=\"btn-dark\" type=\"submit\">Log in</button>\r\n        <button className=\"btn-dark\" onClick={resetPassword} type='button'>Reset Password(complete Username)</button>\r\n        <h2 className=\"responseMessage \">{loginResponse}</h2>\r\n      </form>\r\n    </article>\r\n    </>\r\n  )\r\n};\r\nexport default LogInApp\r\n\r\n\r\n","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\data\\cartItems.js",["117"],"import $, { post } from 'jquery'\r\nexport async function getCartItems(){\r\n  //aici faci post\r\n  const ans = await Promise.resolve($.post('http://localhost:8000/ReactApi/getCartItems.php', {session_id:sessionStorage.getItem(\"session_id\"),\r\n                                                                                      username: sessionStorage.getItem(\"username\"),\r\n                                                                                    }))\r\n  console.log(ans)\r\n  const postResponse = JSON.parse(ans)\r\n  console.log(postResponse)\r\n  return postResponse\r\n  \r\n}","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\data\\user.js",[],"C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\AccountInfo.js",[],"C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\product\\ProductList.js",[],"C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\product\\ProductRow.js",[],"C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\product\\Product.js",["118"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport ProductPage from './ProductPage'\r\nimport {Spring} from 'react-spring/renderprops'\r\nimport {getProductDetails} from '../../data/products'\r\nimport {getUserReview,getLikedComments} from '../../data/user'\r\nimport $ from 'jquery'\r\n\r\n\r\nconst Product = ({id,type,img,name,brand,descr,price})=>{\r\n  const openProductPage = async () =>{\r\n    const productDetails = await  Promise.resolve(getProductDetails(id))\r\n    var stock = productDetails.stock\r\n    var img2 = productDetails.img2\r\n    var img3 = productDetails.img3\r\n    var reviews = productDetails.reviews\r\n    var user_reviewed = false\r\n    var comments = productDetails.comments;\r\n    var reviewed_comments=[];\r\n    if (sessionStorage.getItem(\"username\")){\r\n       const postResponse = await  Promise.resolve(getUserReview(id))\r\n       user_reviewed=postResponse.status\r\n       const commentsResponse = await Promise.resolve(getLikedComments(comments))\r\n       reviewed_comments=commentsResponse\r\n    }\r\n    // DE FACUT COMMENTS product_comment SI SA POTI SA DAI LIKE LA COMMENT\r\n    // fa-l array de obiecte fiecare ob are user-ul like-urile si comentu\r\n    ReactDOM.render(\r\n      <ProductPage key={id} id={id} img={img} name={name} brand={brand} descr={descr}\r\n      price={price} stock={stock} img2={img2} img3={img3} reviews={reviews}\r\n      comments={comments} reviewed={user_reviewed} reviewed_comments={reviewed_comments}/>,\r\n    document.getElementById('main'));\r\n  }\r\n  return (\r\n    <Spring\r\n    from = {{opacity:0,marginTop:500}}\r\n    to ={{opacity:1,marginTop:40}}\r\n    >\r\n      {props => (\r\n      \r\n      <div  onClick={openProductPage} style={props} className=\"container-product d-flex flex-column align-items-center justify-content-center col-8 col-xl-2 col-lg-5 col-md-5 col-sm-5\" >\r\n        <picture className=\"container container-img \">\r\n          <img src={img} className=\"img-fluid \" alt={name}></img>\r\n          </picture>\r\n          <section className='product-descr  text-justify text-center'>\r\n            <h3>{name}</h3>\r\n            <h3>{descr}</h3>\r\n            <h3>{price}$</h3>\r\n          </section>\r\n      </div>\r\n      )}\r\n      </Spring>\r\n  )\r\n}\r\nexport default Product;","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\product\\ProductPage.js",[],"C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\ReviewsMenu.js",["119"],"import React from 'react'\r\n\r\n\r\nconst ReviewsMenu= ({reviews}) =>{\r\n    return (\r\n      <div className=\"container d-flex flex-column justify-content-around align-items-center\">\r\n        {Object.keys(reviews).reverse().map((key)=>{\r\n          var sumTemp=0;\r\n          Object.keys(reviews).map((key)=>{sumTemp+=parseInt(reviews[key])})\r\n          const percentOfSum=(100*reviews[key])/sumTemp\r\n          return (\r\n            <div key={key} className=\"row review-row\">\r\n              <h3>{key +\" stars\"}</h3>\r\n              <div className=\"bar-container\">\r\n                <div className=\"bar\" style={{width:percentOfSum+\"%\",height:\"18px\"}}></div>\r\n              </div>\r\n              <h3>{reviews[key]}</h3>\r\n            </div>\r\n          )\r\n        })\r\n        }\r\n      </div>\r\n    );\r\n}\r\nexport default ReviewsMenu","C:\\Users\\DutMan\\Documents\\GitHub\\e-commerce-Website\\src\\Components\\cart\\CartItem.js",["120","121"],"import React,{useState} from 'react';\r\nimport { Spring } from 'react-spring/renderprops';\r\n\r\n// FA FAZA CU BUTON CU SAVE CARE SA SALVEZE IN BAZA DE DATE NUMARUL DE PRODUSE PE CARE L AM ALES\r\n// (daca fac cantitatea 0 sa se sterga cart item-ul)\r\nconst CartItem = ({index,id,productType,img,name,price}) =>{\r\n  console.log(index)\r\n  const [productQuantity,setProductQuantity]= useState(1)\r\n  const decreaseQuantity = () =>{\r\n    if (productQuantity!=1)\r\n    setProductQuantity(productQuantity-1);\r\n  }\r\n  const increaseQuantity = () =>{\r\n    setProductQuantity(productQuantity+1);\r\n  }\r\n  return (\r\n    <Spring\r\n    from ={{opacity:0}}\r\n    to = {{opacity:1}}\r\n    >\r\n      {props => (\r\n      <div style={props} className=\" container-cart row justify-content-around border  align-items-center\">\r\n        <picture className=\"container container-img \">\r\n          <img src={img} className=\"img-fluid\"></img>\r\n        </picture>\r\n        <ul>\r\n          <li>Name: {name}</li>\r\n          <li>Price: {parseInt(price)*parseInt(productQuantity)}$</li>\r\n          <li>\r\n            <button className=\"btn btn-dark\" onClick={decreaseQuantity}>-</button>\r\n            <span id={\"quantity-\"+index}>Quantity: {productQuantity}</span>\r\n            <button className=\"btn btn-dark\" onClick={increaseQuantity}>+</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      )}</Spring>\r\n  );\r\n}\r\nexport default CartItem;",{"ruleId":"122","severity":1,"message":"123","line":4,"column":8,"nodeType":"124","messageId":"125","endLine":4,"endColumn":19},{"ruleId":"122","severity":1,"message":"126","line":5,"column":8,"nodeType":"124","messageId":"125","endLine":5,"endColumn":27},{"ruleId":"122","severity":1,"message":"127","line":6,"column":8,"nodeType":"124","messageId":"125","endLine":6,"endColumn":19},{"ruleId":"122","severity":1,"message":"128","line":8,"column":8,"nodeType":"124","messageId":"125","endLine":8,"endColumn":22},{"ruleId":"122","severity":1,"message":"129","line":9,"column":9,"nodeType":"124","messageId":"125","endLine":9,"endColumn":20},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"122","severity":1,"message":"134","line":1,"column":24,"nodeType":"124","messageId":"125","endLine":1,"endColumn":33},{"ruleId":"135","severity":1,"message":"136","line":34,"column":25,"nodeType":"137","endLine":34,"endColumn":91},{"ruleId":"138","severity":1,"message":"139","line":156,"column":12,"nodeType":"124","messageId":"140","endLine":156,"endColumn":15},{"ruleId":"141","severity":1,"message":"142","line":13,"column":13,"nodeType":"143","endLine":19,"endColumn":6},{"ruleId":"122","severity":1,"message":"144","line":58,"column":11,"nodeType":"124","messageId":"125","endLine":58,"endColumn":14},{"ruleId":"135","severity":1,"message":"136","line":70,"column":9,"nodeType":"137","endLine":70,"endColumn":78},{"ruleId":"135","severity":1,"message":"136","line":75,"column":9,"nodeType":"137","endLine":75,"endColumn":83},{"ruleId":"135","severity":1,"message":"136","line":79,"column":9,"nodeType":"137","endLine":79,"endColumn":235},{"ruleId":"135","severity":1,"message":"136","line":84,"column":9,"nodeType":"137","endLine":84,"endColumn":104},{"ruleId":"135","severity":1,"message":"136","line":93,"column":9,"nodeType":"137","endLine":93,"endColumn":69},{"ruleId":"122","severity":1,"message":"145","line":3,"column":13,"nodeType":"124","messageId":"125","endLine":3,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":43,"column":18,"nodeType":"148","messageId":"149","endLine":43,"endColumn":20},{"ruleId":"146","severity":1,"message":"147","line":90,"column":20,"nodeType":"148","messageId":"149","endLine":90,"endColumn":22},{"ruleId":"146","severity":1,"message":"147","line":90,"column":42,"nodeType":"148","messageId":"149","endLine":90,"endColumn":44},{"ruleId":"146","severity":1,"message":"147","line":90,"column":63,"nodeType":"148","messageId":"149","endLine":90,"endColumn":65},{"ruleId":"146","severity":1,"message":"147","line":91,"column":17,"nodeType":"148","messageId":"149","endLine":91,"endColumn":19},{"ruleId":"146","severity":1,"message":"147","line":91,"column":37,"nodeType":"148","messageId":"149","endLine":91,"endColumn":39},{"ruleId":"146","severity":1,"message":"147","line":91,"column":54,"nodeType":"148","messageId":"149","endLine":91,"endColumn":56},{"ruleId":"146","severity":1,"message":"147","line":91,"column":73,"nodeType":"148","messageId":"149","endLine":91,"endColumn":75},{"ruleId":"122","severity":1,"message":"150","line":1,"column":15,"nodeType":"124","messageId":"125","endLine":1,"endColumn":23},{"ruleId":"122","severity":1,"message":"145","line":2,"column":13,"nodeType":"124","messageId":"125","endLine":2,"endColumn":17},{"ruleId":"122","severity":1,"message":"151","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":16},{"ruleId":"122","severity":1,"message":"145","line":3,"column":13,"nodeType":"124","messageId":"125","endLine":3,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":21,"column":33,"nodeType":"148","messageId":"149","endLine":21,"endColumn":35},{"ruleId":"146","severity":1,"message":"147","line":34,"column":35,"nodeType":"148","messageId":"149","endLine":34,"endColumn":37},{"ruleId":"146","severity":1,"message":"147","line":36,"column":40,"nodeType":"148","messageId":"149","endLine":36,"endColumn":42},{"ruleId":"122","severity":1,"message":"145","line":1,"column":13,"nodeType":"124","messageId":"125","endLine":1,"endColumn":17},{"ruleId":"122","severity":1,"message":"152","line":7,"column":8,"nodeType":"124","messageId":"125","endLine":7,"endColumn":9},{"ruleId":"153","severity":1,"message":"154","line":9,"column":41,"nodeType":"143","messageId":"155","endLine":9,"endColumn":43},{"ruleId":"146","severity":1,"message":"156","line":10,"column":24,"nodeType":"148","messageId":"149","endLine":10,"endColumn":26},{"ruleId":"157","severity":1,"message":"158","line":24,"column":11,"nodeType":"137","endLine":24,"endColumn":48},"no-unused-vars","'ProductsApp' is defined but never used.","Identifier","unusedVar","'AuthentificationApp' is defined but never used.","'CheckoutApp' is defined but never used.","'AccountDetails' is defined but never used.","'getProducts' is defined but never used.","no-native-reassign",["159"],"no-negated-in-lhs",["160"],"'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-redeclare","'key' is already defined.","redeclared","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'ans' is assigned a value but never used.","'post' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'ReactDOM' is defined but never used.","'$' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]